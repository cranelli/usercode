#include <algorithm>
#include <iostream>
#include "TTree.h"
#include "TChain.h"
#include "include/BranchInit.h"
#include "include/BranchDefs.h"

namespace IN {
 Int_t				nHLT;
 Int_t				run;
 Long64_t				event;
 Int_t				lumis;
 Bool_t				isData;
 Int_t				HLT[444];
 Int_t				HLTIndex[70];
 Float_t				bspotPos[3];
 Int_t				nVtx;
 std::vector<float>				*vtx_x;
 std::vector<float>				*vtx_y;
 std::vector<float>				*vtx_z;
 Int_t				IsVtxGood;
 Int_t				nGoodVtx;
 Int_t				nVtxBS;
 std::vector<float>				*vtxbs_x;
 std::vector<float>				*vtxbs_y;
 std::vector<float>				*vtxbs_z;
 Float_t				pdf[7];
 Float_t				pthat;
 Float_t				processID;
 Int_t				nMC;
 std::vector<int>				*mcPID;
 std::vector<float>				*mcVtx_x;
 std::vector<float>				*mcVtx_y;
 std::vector<float>				*mcVtx_z;
 std::vector<float>				*mcPt;
 std::vector<float>				*mcMass;
 std::vector<float>				*mcEta;
 std::vector<float>				*mcPhi;
 std::vector<float>				*mcE;
 std::vector<float>				*mcEt;
 std::vector<int>				*mcGMomPID;
 std::vector<int>				*mcMomPID;
 std::vector<float>				*mcMomPt;
 std::vector<float>				*mcMomMass;
 std::vector<float>				*mcMomEta;
 std::vector<float>				*mcMomPhi;
 std::vector<int>				*mcIndex;
 std::vector<int>				*mcDecayType;
 std::vector<int>				*mcParentage;
 std::vector<int>				*mcStatus;
 Float_t				genMET;
 Float_t				genMETPhi;
 Int_t				nPUInfo;
 std::vector<int>				*nPU;
 std::vector<int>				*puBX;
 std::vector<float>				*puTrue;
 Float_t				pfMET;
 Float_t				pfMETPhi;
 Float_t				pfMETsumEt;
 Float_t				pfMETmEtSig;
 Float_t				pfMETSig;
 Float_t				pfType01MET;
 Float_t				pfType01METPhi;
 Float_t				pfType01METsumEt;
 Float_t				pfType01METmEtSig;
 Float_t				pfType01METSig;
 Float_t				recoPfMET;
 Float_t				recoPfMETPhi;
 Float_t				recoPfMETsumEt;
 Float_t				recoPfMETmEtSig;
 Float_t				recoPfMETSig;
 Float_t				trkMETxPV;
 Float_t				trkMETyPV;
 Float_t				trkMETPhiPV;
 Float_t				trkMETPV;
 std::vector<float>				*trkMETx;
 std::vector<float>				*trkMETy;
 std::vector<float>				*trkMETPhi;
 std::vector<float>				*trkMET;
 Int_t				metFilters[10];
 Int_t				nEle;
 std::vector<unsigned long>				*eleTrg;
 std::vector<int>				*eleClass;
 std::vector<int>				*eleIsEcalDriven;
 std::vector<int>				*eleCharge;
 std::vector<int>				*eleChargeConsistent;
 std::vector<float>				*eleEn;
 std::vector<float>				*eleEcalEn;
 std::vector<float>				*eleSCRawEn;
 std::vector<float>				*eleSCEn;
 std::vector<float>				*eleESEn;
 std::vector<float>				*elePt;
 std::vector<float>				*eleEta;
 std::vector<float>				*elePhi;
 std::vector<float>				*eleR9;
 std::vector<std::vector<float> >				*eleEtaVtx;
 std::vector<std::vector<float> >				*elePhiVtx;
 std::vector<std::vector<float> >				*eleEtVtx;
 std::vector<float>				*eleSCEta;
 std::vector<float>				*eleSCPhi;
 std::vector<float>				*eleSCEtaWidth;
 std::vector<float>				*eleSCPhiWidth;
 std::vector<float>				*eleVtx_x;
 std::vector<float>				*eleVtx_y;
 std::vector<float>				*eleVtx_z;
 std::vector<float>				*eleD0;
 std::vector<float>				*eleDz;
 std::vector<float>				*eleD0GV;
 std::vector<float>				*eleDzGV;
 std::vector<std::vector<float> >				*eleD0Vtx;
 std::vector<std::vector<float> >				*eleDzVtx;
 std::vector<float>				*eleHoverE;
 std::vector<float>				*eleHoverE12;
 std::vector<float>				*eleEoverP;
 std::vector<float>				*elePin;
 std::vector<float>				*elePout;
 std::vector<float>				*eleTrkMomErr;
 std::vector<float>				*eleBrem;
 std::vector<float>				*eledEtaAtVtx;
 std::vector<float>				*eledPhiAtVtx;
 std::vector<float>				*eleSigmaIEtaIEta;
 std::vector<float>				*eleSigmaIEtaIPhi;
 std::vector<float>				*eleSigmaIPhiIPhi;
 std::vector<float>				*eleEmax;
 std::vector<float>				*eleE2ndMax;
 std::vector<float>				*eleETop;
 std::vector<float>				*eleEBottom;
 std::vector<float>				*eleELeft;
 std::vector<float>				*eleERight;
 std::vector<float>				*eleE1x5;
 std::vector<float>				*eleE3x3;
 std::vector<float>				*eleE5x5;
 std::vector<float>				*eleE2x5Max;
 std::vector<float>				*eleE2x5Top;
 std::vector<float>				*eleE2x5Bottom;
 std::vector<float>				*eleE2x5Left;
 std::vector<float>				*eleE2x5Right;
 std::vector<float>				*eleSeedEta;
 std::vector<float>				*eleSeedE;
 std::vector<float>				*eleSeedPhi;
 std::vector<float>				*eleCrysEta;
 std::vector<float>				*eleCrysPhi;
 std::vector<int>				*eleCrysIEta;
 std::vector<int>				*eleCrysIPhi;
 std::vector<float>				*eleRegrE;
 std::vector<float>				*eleRegrEerr;
 std::vector<float>				*elePhoRegrE;
 std::vector<float>				*elePhoRegrEerr;
 std::vector<float>				*eleSeedTime;
 std::vector<int>				*eleRecoFlag;
 std::vector<int>				*elePos;
 std::vector<int>				*eleGenIndex;
 std::vector<int>				*eleGenGMomPID;
 std::vector<int>				*eleGenMomPID;
 std::vector<float>				*eleGenMomPt;
 std::vector<float>				*eleIsoTrkDR03;
 std::vector<float>				*eleIsoEcalDR03;
 std::vector<float>				*eleIsoHcalDR03;
 std::vector<float>				*eleIsoHcalDR0312;
 std::vector<float>				*eleIsoTrkDR04;
 std::vector<float>				*eleIsoEcalDR04;
 std::vector<float>				*eleIsoHcalDR04;
 std::vector<float>				*eleIsoHcalDR0412;
 std::vector<float>				*eleModIsoTrk;
 std::vector<float>				*eleModIsoEcal;
 std::vector<float>				*eleModIsoHcal;
 std::vector<int>				*eleMissHits;
 std::vector<float>				*eleConvDist;
 std::vector<float>				*eleConvDcot;
 std::vector<int>				*eleConvVtxFit;
 std::vector<float>				*eleIP3D;
 std::vector<float>				*eleIP3DErr;
 std::vector<float>				*eleIDMVANonTrig;
 std::vector<float>				*eleIDMVATrig;
 std::vector<float>				*elePFChIso03;
 std::vector<float>				*elePFPhoIso03;
 std::vector<float>				*elePFNeuIso03;
 std::vector<float>				*elePFChIso04;
 std::vector<float>				*elePFPhoIso04;
 std::vector<float>				*elePFNeuIso04;
 std::vector<float>				*eleESEffSigmaRR_x;
 std::vector<float>				*eleESEffSigmaRR_y;
 std::vector<float>				*eleESEffSigmaRR_z;
 Int_t				nPho;
 std::vector<unsigned long>				*phoTrg;
 std::vector<unsigned long>				*phoTrgFilter;
 std::vector<bool>				*phoIsPhoton;
 std::vector<float>				*phoSCPos_x;
 std::vector<float>				*phoSCPos_y;
 std::vector<float>				*phoSCPos_z;
 std::vector<float>				*phoCaloPos_x;
 std::vector<float>				*phoCaloPos_y;
 std::vector<float>				*phoCaloPos_z;
 std::vector<float>				*phoE;
 std::vector<float>				*phoEt;
 std::vector<float>				*phoEta;
 std::vector<float>				*phoVtx_x;
 std::vector<float>				*phoVtx_y;
 std::vector<float>				*phoVtx_z;
 std::vector<float>				*phoPhi;
 std::vector<std::vector<float> >				*phoEtVtx;
 std::vector<std::vector<float> >				*phoEtaVtx;
 std::vector<std::vector<float> >				*phoPhiVtx;
 std::vector<float>				*phoR9;
 std::vector<int>				*phoNClus;
 std::vector<float>				*phoTrkIsoHollowDR03;
 std::vector<float>				*phoEcalIsoDR03;
 std::vector<float>				*phoHcalIsoDR03;
 std::vector<float>				*phoHcalIsoDR0312;
 std::vector<float>				*phoTrkIsoHollowDR04;
 std::vector<float>				*phoCiCdRtoTrk;
 std::vector<float>				*phoEcalIsoDR04;
 std::vector<float>				*phoHcalIsoDR04;
 std::vector<float>				*phoHcalIsoDR0412;
 std::vector<float>				*phoHoverE;
 std::vector<float>				*phoHoverE12;
 std::vector<int>				*phoEleVeto;
 std::vector<float>				*phoSigmaIEtaIEta;
 std::vector<float>				*phoSigmaIEtaIPhi;
 std::vector<float>				*phoSigmaIPhiIPhi;
 std::vector<float>				*phoCiCPF4phopfIso03;
 std::vector<float>				*phoCiCPF4phopfIso04;
 std::vector<std::vector<float> >				*phoCiCPF4chgpfIso02;
 std::vector<std::vector<float> >				*phoCiCPF4chgpfIso03;
 std::vector<std::vector<float> >				*phoCiCPF4chgpfIso04;
 std::vector<float>				*phoEmax;
 std::vector<float>				*phoETop;
 std::vector<float>				*phoEBottom;
 std::vector<float>				*phoELeft;
 std::vector<float>				*phoERight;
 std::vector<float>				*phoE2ndMax;
 std::vector<float>				*phoE3x3;
 std::vector<float>				*phoE3x1;
 std::vector<float>				*phoE1x3;
 std::vector<float>				*phoE5x5;
 std::vector<float>				*phoE1x5;
 std::vector<float>				*phoE2x2;
 std::vector<float>				*phoE2x5Max;
 std::vector<float>				*phoE2x5Top;
 std::vector<float>				*phoE2x5Bottom;
 std::vector<float>				*phoE2x5Left;
 std::vector<float>				*phoE2x5Right;
 std::vector<float>				*phoSeedE;
 std::vector<float>				*phoSeedEta;
 std::vector<float>				*phoSeedPhi;
 std::vector<float>				*phoCrysEta;
 std::vector<float>				*phoCrysPhi;
 std::vector<int>				*phoCrysIEta;
 std::vector<int>				*phoCrysIPhi;
 std::vector<float>				*phoPFChIso;
 std::vector<float>				*phoPFPhoIso;
 std::vector<float>				*phoPFNeuIso;
 std::vector<float>				*phoSCRChIso;
 std::vector<float>				*phoSCRPhoIso;
 std::vector<float>				*phoSCRNeuIso;
 std::vector<float>				*phoSCRChIso04;
 std::vector<float>				*phoSCRPhoIso04;
 std::vector<float>				*phoSCRNeuIso04;
 std::vector<float>				*phoRandConeChIso;
 std::vector<float>				*phoRandConePhoIso;
 std::vector<float>				*phoRandConeNeuIso;
 std::vector<float>				*phoRandConeChIso04;
 std::vector<float>				*phoRandConePhoIso04;
 std::vector<float>				*phoRandConeNeuIso04;
 std::vector<float>				*phoRegrE;
 std::vector<float>				*phoRegrEerr;
 std::vector<float>				*phoSeedTime;
 std::vector<int>				*phoSeedDetId1;
 std::vector<int>				*phoSeedDetId2;
 std::vector<float>				*phoLICTD;
 std::vector<int>				*phoRecoFlag;
 std::vector<int>				*phoPos;
 std::vector<int>				*phoGenIndex;
 std::vector<int>				*phoGenGMomPID;
 std::vector<int>				*phoGenMomPID;
 std::vector<float>				*phoGenMomPt;
 std::vector<float>				*phoSCE;
 std::vector<float>				*phoSCRawE;
 std::vector<float>				*phoESEn;
 std::vector<float>				*phoSCEt;
 std::vector<float>				*phoSCEta;
 std::vector<float>				*phoSCPhi;
 std::vector<float>				*phoSCEtaWidth;
 std::vector<float>				*phoSCPhiWidth;
 std::vector<float>				*phoSCBrem;
 std::vector<int>				*phoOverlap;
 std::vector<int>				*phohasPixelSeed;
 std::vector<int>				*pho_hasConvPf;
 std::vector<int>				*pho_hasSLConvPf;
 std::vector<float>				*pho_pfconvVtxZ;
 std::vector<float>				*pho_pfconvVtxZErr;
 std::vector<int>				*pho_nSLConv;
 std::vector<std::vector<float> >				*pho_pfSLConvPos_x;
 std::vector<std::vector<float> >				*pho_pfSLConvPos_y;
 std::vector<std::vector<float> >				*pho_pfSLConvPos_z;
 std::vector<std::vector<float> >				*pho_pfSLConvVtxZ;
 std::vector<int>				*phoIsConv;
 std::vector<int>				*phoNConv;
 std::vector<float>				*phoConvInvMass;
 std::vector<float>				*phoConvCotTheta;
 std::vector<float>				*phoConvEoverP;
 std::vector<float>				*phoConvZofPVfromTrks;
 std::vector<float>				*phoConvMinDist;
 std::vector<float>				*phoConvdPhiAtVtx;
 std::vector<float>				*phoConvdPhiAtCalo;
 std::vector<float>				*phoConvdEtaAtCalo;
 std::vector<float>				*phoConvTrkd0_x;
 std::vector<float>				*phoConvTrkd0_y;
 std::vector<float>				*phoConvTrkPin_x;
 std::vector<float>				*phoConvTrkPin_y;
 std::vector<float>				*phoConvTrkPout_x;
 std::vector<float>				*phoConvTrkPout_y;
 std::vector<float>				*phoConvTrkdz_x;
 std::vector<float>				*phoConvTrkdz_y;
 std::vector<float>				*phoConvTrkdzErr_x;
 std::vector<float>				*phoConvTrkdzErr_y;
 std::vector<float>				*phoConvChi2;
 std::vector<float>				*phoConvChi2Prob;
 std::vector<int>				*phoConvNTrks;
 std::vector<float>				*phoConvCharge1;
 std::vector<float>				*phoConvCharge2;
 std::vector<int>				*phoConvValidVtx;
 std::vector<float>				*phoConvLikeLihood;
 std::vector<float>				*phoConvP4_0;
 std::vector<float>				*phoConvP4_1;
 std::vector<float>				*phoConvP4_2;
 std::vector<float>				*phoConvP4_3;
 std::vector<float>				*phoConvVtx_x;
 std::vector<float>				*phoConvVtx_y;
 std::vector<float>				*phoConvVtx_z;
 std::vector<float>				*phoConvVtxErr_x;
 std::vector<float>				*phoConvVtxErr_y;
 std::vector<float>				*phoConvVtxErr_z;
 std::vector<float>				*phoConvPairMomentum_x;
 std::vector<float>				*phoConvPairMomentum_y;
 std::vector<float>				*phoConvPairMomentum_z;
 std::vector<float>				*phoConvRefittedMomentum_x;
 std::vector<float>				*phoConvRefittedMomentum_y;
 std::vector<float>				*phoConvRefittedMomentum_z;
 std::vector<int>				*SingleLegConv;
 std::vector<std::vector<float> >				*phoPFConvVtx_x;
 std::vector<std::vector<float> >				*phoPFConvVtx_y;
 std::vector<std::vector<float> >				*phoPFConvVtx_z;
 std::vector<std::vector<float> >				*phoPFConvMom_x;
 std::vector<std::vector<float> >				*phoPFConvMom_y;
 std::vector<std::vector<float> >				*phoPFConvMom_z;
 std::vector<float>				*phoESEffSigmaRR_x;
 std::vector<float>				*phoESEffSigmaRR_y;
 std::vector<float>				*phoESEffSigmaRR_z;
 Int_t				nMu;
 std::vector<unsigned long>				*muTrg;
 std::vector<float>				*muEta;
 std::vector<float>				*muPhi;
 std::vector<int>				*muCharge;
 std::vector<float>				*muPt;
 std::vector<float>				*muPz;
 std::vector<float>				*muVtx_x;
 std::vector<float>				*muVtx_y;
 std::vector<float>				*muVtx_z;
 std::vector<float>				*muVtxGlb_x;
 std::vector<float>				*muVtxGlb_y;
 std::vector<float>				*muVtxGlb_z;
 std::vector<int>				*muGenIndex;
 std::vector<float>				*mucktPt;
 std::vector<float>				*mucktPtErr;
 std::vector<float>				*mucktEta;
 std::vector<float>				*mucktPhi;
 std::vector<float>				*mucktdxy;
 std::vector<float>				*mucktdz;
 std::vector<float>				*muIsoTrk;
 std::vector<float>				*muIsoCalo;
 std::vector<float>				*muIsoEcal;
 std::vector<float>				*muIsoHcal;
 std::vector<float>				*muChi2NDF;
 std::vector<float>				*muInnerChi2NDF;
 std::vector<float>				*muPFIsoR04_CH;
 std::vector<float>				*muPFIsoR04_NH;
 std::vector<float>				*muPFIsoR04_Pho;
 std::vector<float>				*muPFIsoR04_PU;
 std::vector<float>				*muPFIsoR04_CPart;
 std::vector<float>				*muPFIsoR04_NHHT;
 std::vector<float>				*muPFIsoR04_PhoHT;
 std::vector<float>				*muPFIsoR03_CH;
 std::vector<float>				*muPFIsoR03_NH;
 std::vector<float>				*muPFIsoR03_Pho;
 std::vector<float>				*muPFIsoR03_PU;
 std::vector<float>				*muPFIsoR03_CPart;
 std::vector<float>				*muPFIsoR03_NHHT;
 std::vector<float>				*muPFIsoR03_PhoHT;
 std::vector<int>				*muType;
 std::vector<float>				*muD0;
 std::vector<float>				*muDz;
 std::vector<float>				*muD0GV;
 std::vector<float>				*muDzGV;
 std::vector<std::vector<float> >				*muD0Vtx;
 std::vector<std::vector<float> >				*muDzVtx;
 std::vector<float>				*muInnerD0;
 std::vector<float>				*muInnerDz;
 std::vector<float>				*muInnerD0GV;
 std::vector<float>				*muInnerDzGV;
 std::vector<float>				*muInnerPt;
 std::vector<float>				*muInnerPtErr;
 std::vector<int>				*muNumberOfValidTrkLayers;
 std::vector<int>				*muNumberOfValidTrkHits;
 std::vector<int>				*muNumberOfValidPixelLayers;
 std::vector<int>				*muNumberOfValidPixelHits;
 std::vector<int>				*muNumberOfValidMuonHits;
 std::vector<int>				*muStations;
 std::vector<int>				*muChambers;
 std::vector<float>				*muIP3D;
 std::vector<float>				*muIP3DErr;
 Int_t				nTau;
 std::vector<bool>				*tauDecayModeFinding;
 std::vector<bool>				*tauAgainstElectronLooseMVA3;
 std::vector<bool>				*tauAgainstElectronMediumMVA3;
 std::vector<bool>				*tauAgainstElectronTightMVA3;
 std::vector<bool>				*tauAgainstElectronVTightMVA3;
 std::vector<bool>				*tauAgainstElectronDeadECAL;
 std::vector<bool>				*tauAgainstMuonLoose2;
 std::vector<bool>				*tauAgainstMuonMedium2;
 std::vector<bool>				*tauAgainstMuonTight2;
 std::vector<bool>				*tauCombinedIsolationDeltaBetaCorrRaw3Hits;
 std::vector<bool>				*tauLooseCombinedIsolationDeltaBetaCorr3Hits;
 std::vector<bool>				*tauMediumCombinedIsolationDeltaBetaCorr3Hits;
 std::vector<bool>				*tauTightCombinedIsolationDeltaBetaCorr3Hits;
 std::vector<float>				*tauEta;
 std::vector<float>				*tauPhi;
 std::vector<float>				*tauPt;
 std::vector<float>				*tauEt;
 std::vector<float>				*tauCharge;
 std::vector<int>				*tauDecayMode;
 std::vector<float>				*tauEMFraction;
 std::vector<float>				*tauHCAL3x3OverPLead;
 std::vector<float>				*tauHCALMaxOverPLead;
 std::vector<float>				*tauHCALTotOverPLead;
 std::vector<float>				*tauIsolationPFChargedHadrCandsPtSum;
 std::vector<float>				*tauIsolationPFGammaCandsEtSum;
 std::vector<float>				*tauLeadPFChargedHadrCandsignedSipt;
 std::vector<bool>				*tauLeadChargedHadronExists;
 std::vector<float>				*tauLeadChargedHadronEta;
 std::vector<float>				*tauLeadChargedHadronPhi;
 std::vector<float>				*tauLeadChargedHadronPt;
 Float_t				rho25;
 Float_t				rho25_neu;
 Float_t				rho25_muPFiso;
 Float_t				rho25_elePFiso;
 Float_t				rho2011;
 Float_t				rho2012;
 Float_t				QGTag_MLP;
 Float_t				QGTag_likelihood;
 Int_t				nCA8Jet;
 std::vector<float>				*CA8JetPt;
 std::vector<float>				*CA8JetEta;
 std::vector<float>				*CA8JetPhi;
 std::vector<float>				*CA8JetMass;
 std::vector<float>				*CA8JetArea;
 std::vector<float>				*CA8Jet_tau1;
 std::vector<float>				*CA8Jet_tau2;
 std::vector<float>				*CA8Jet_tau3;
 std::vector<float>				*CA8JetCHF;
 std::vector<float>				*CA8JetNHF;
 std::vector<float>				*CA8JetCEF;
 std::vector<float>				*CA8JetNEF;
 std::vector<int>				*CA8JetNCH;
 std::vector<int>				*CA8Jetnconstituents;
 std::vector<float>				*CA8prunedJetMass;
 std::vector<int>				*CA8prunedJet_nSubJets;
 std::vector<std::vector<float> >				*CA8prunedJet_SubjetPt;
 std::vector<std::vector<float> >				*CA8prunedJet_SubjetEta;
 std::vector<std::vector<float> >				*CA8prunedJet_SubjetPhi;
 std::vector<std::vector<float> >				*CA8prunedJet_SubjetMass;
 Int_t				nJet;
 std::vector<unsigned long>				*jetTrg;
 std::vector<float>				*jetEn;
 std::vector<float>				*jetPt;
 std::vector<float>				*jetEta;
 std::vector<float>				*jetPhi;
 std::vector<float>				*jetCharge;
 std::vector<float>				*jetEt;
 std::vector<float>				*jetRawPt;
 std::vector<float>				*jetRawEn;
 std::vector<float>				*jetArea;
 std::vector<float>				*jetCHF;
 std::vector<float>				*jetNHF;
 std::vector<float>				*jetCEF;
 std::vector<float>				*jetNEF;
 std::vector<int>				*jetNCH;
 std::vector<float>				*jetHFHAE;
 std::vector<float>				*jetHFEME;
 std::vector<int>				*jetNConstituents;
 std::vector<float>				*jetCombinedSecondaryVtxBJetTags;
 std::vector<float>				*jetCombinedSecondaryVtxMVABJetTags;
 std::vector<float>				*jetJetProbabilityBJetTags;
 std::vector<float>				*jetJetBProbabilityBJetTags;
 std::vector<std::vector<float> >				*jetBetaStar;
 std::vector<bool>				*jetPFLooseId;
 std::vector<float>				*jetDRMean;
 std::vector<float>				*jetDR2Mean;
 std::vector<float>				*jetDZ;
 std::vector<float>				*jetFrac01;
 std::vector<float>				*jetFrac02;
 std::vector<float>				*jetFrac03;
 std::vector<float>				*jetFrac04;
 std::vector<float>				*jetFrac05;
 std::vector<float>				*jetFrac06;
 std::vector<float>				*jetFrac07;
 std::vector<float>				*jetBeta;
 std::vector<float>				*jetBetaStarCMG;
 std::vector<float>				*jetBetaStarClassic;
 std::vector<std::vector<float> >				*jetBetaExt;
 std::vector<std::vector<float> >				*jetBetaStarCMGExt;
 std::vector<std::vector<float> >				*jetBetaStarClassicExt;
 std::vector<float>				*jetNNeutrals;
 std::vector<float>				*jetNCharged;
 std::vector<std::vector<float> >				*jetMVAs;
 std::vector<std::vector<int> >				*jetWPLevels;
 std::vector<std::vector<float> >				*jetMVAsExt_simple;
 std::vector<std::vector<int> >				*jetWPLevelsExt_simple;
 std::vector<std::vector<float> >				*jetMVAsExt_full;
 std::vector<std::vector<int> >				*jetWPLevelsExt_full;
 std::vector<std::vector<float> >				*jetMVAsExt_cutBased;
 std::vector<std::vector<int> >				*jetWPLevelsExt_cutBased;
 std::vector<std::vector<float> >				*jetMVAsExt_philv1;
 std::vector<std::vector<int> >				*jetWPLevelsExt_philv1;
 std::vector<float>				*jetMt;
 std::vector<float>				*jetJECUnc;
 std::vector<float>				*jetLeadTrackPt;
 std::vector<float>				*jetVtxPt;
 std::vector<float>				*jetVtxMass;
 std::vector<float>				*jetVtx3dL;
 std::vector<float>				*jetVtx3deL;
 std::vector<float>				*jetSoftLeptPt;
 std::vector<float>				*jetSoftLeptPtRel;
 std::vector<float>				*jetSoftLeptdR;
 std::vector<float>				*jetSoftLeptIdlooseMu;
 std::vector<float>				*jetSoftLeptIdEle95;
 std::vector<float>				*jetDPhiMETJet;
 std::vector<float>				*jetPuJetIdL;
 std::vector<float>				*jetPuJetIdM;
 std::vector<float>				*jetPuJetIdT;
 std::vector<int>				*jetPartonID;
 std::vector<int>				*jetGenJetIndex;
 std::vector<float>				*jetGenJetEn;
 std::vector<float>				*jetGenJetPt;
 std::vector<float>				*jetGenJetEta;
 std::vector<float>				*jetGenJetPhi;
 std::vector<int>				*jetGenPartonID;
 std::vector<float>				*jetGenEn;
 std::vector<float>				*jetGenPt;
 std::vector<float>				*jetGenEta;
 std::vector<float>				*jetGenPhi;
 std::vector<int>				*jetGenPartonMomID;
 Int_t				nConv;
 std::vector<float>				*convP4_x;
 std::vector<float>				*convP4_y;
 std::vector<float>				*convP4_z;
 std::vector<float>				*convP4_E;
 std::vector<float>				*convVtx_x;
 std::vector<float>				*convVtx_y;
 std::vector<float>				*convVtx_z;
 std::vector<float>				*convVtxErr_x;
 std::vector<float>				*convVtxErr_y;
 std::vector<float>				*convVtxErr_z;
 std::vector<float>				*convPairMomentum_x;
 std::vector<float>				*convPairMomentum_y;
 std::vector<float>				*convPairMomentum_z;
 std::vector<float>				*convRefittedMomentum_x;
 std::vector<float>				*convRefittedMomentum_y;
 std::vector<float>				*convRefittedMomentum_z;
 std::vector<int>				*convNTracks;
 std::vector<float>				*convPairInvMass;
 std::vector<float>				*convPairCotThetaSep;
 std::vector<float>				*convEoverP;
 std::vector<float>				*convDistOfMinApproach;
 std::vector<float>				*convDPhiTrksAtVtx;
 std::vector<float>				*convDPhiTrksAtEcal;
 std::vector<float>				*convDEtaTrksAtEcal;
 std::vector<float>				*convDxy;
 std::vector<float>				*convDz;
 std::vector<float>				*convLxy;
 std::vector<float>				*convLz;
 std::vector<float>				*convZofPrimVtxFromTrks;
 std::vector<int>				*convNHitsBeforeVtx_0;
 std::vector<int>				*convNHitsBeforeVtx_1;
 std::vector<int>				*convNSharedHits;
 std::vector<int>				*convValidVtx;
 std::vector<float>				*convMVALikelihood;
 std::vector<float>				*convChi2;
 std::vector<float>				*convChi2Probability;
 std::vector<float>				*convTk1Dz;
 std::vector<float>				*convTk2Dz;
 std::vector<float>				*convTk1DzErr;
 std::vector<float>				*convTk2DzErr;
 std::vector<int>				*convCh1Ch2;
 std::vector<float>				*convTk1D0;
 std::vector<float>				*convTk1Pout;
 std::vector<float>				*convTk1Pin;
 std::vector<float>				*convTk2D0;
 std::vector<float>				*convTk2Pout;
 std::vector<float>				*convTk2Pin;
};
namespace OUT {
};
void InitINTree( TChain * tree) {

  tree->SetBranchAddress("nHLT", &IN::nHLT);
  tree->SetBranchAddress("run", &IN::run);
  tree->SetBranchAddress("event", &IN::event);
  tree->SetBranchAddress("lumis", &IN::lumis);
  tree->SetBranchAddress("isData", &IN::isData);
  tree->SetBranchAddress("HLT", &IN::HLT);
  tree->SetBranchAddress("HLTIndex", &IN::HLTIndex);
  tree->SetBranchAddress("bspotPos", &IN::bspotPos);
  tree->SetBranchAddress("nVtx", &IN::nVtx);
  tree->SetBranchAddress("vtx_x", &IN::vtx_x);
  tree->SetBranchAddress("vtx_y", &IN::vtx_y);
  tree->SetBranchAddress("vtx_z", &IN::vtx_z);
  tree->SetBranchAddress("IsVtxGood", &IN::IsVtxGood);
  tree->SetBranchAddress("nGoodVtx", &IN::nGoodVtx);
  tree->SetBranchAddress("nVtxBS", &IN::nVtxBS);
  tree->SetBranchAddress("vtxbs_x", &IN::vtxbs_x);
  tree->SetBranchAddress("vtxbs_y", &IN::vtxbs_y);
  tree->SetBranchAddress("vtxbs_z", &IN::vtxbs_z);
  tree->SetBranchAddress("pdf", &IN::pdf);
  tree->SetBranchAddress("pthat", &IN::pthat);
  tree->SetBranchAddress("processID", &IN::processID);
  tree->SetBranchAddress("nMC", &IN::nMC);
  tree->SetBranchAddress("mcPID", &IN::mcPID);
  tree->SetBranchAddress("mcVtx_x", &IN::mcVtx_x);
  tree->SetBranchAddress("mcVtx_y", &IN::mcVtx_y);
  tree->SetBranchAddress("mcVtx_z", &IN::mcVtx_z);
  tree->SetBranchAddress("mcPt", &IN::mcPt);
  tree->SetBranchAddress("mcMass", &IN::mcMass);
  tree->SetBranchAddress("mcEta", &IN::mcEta);
  tree->SetBranchAddress("mcPhi", &IN::mcPhi);
  tree->SetBranchAddress("mcE", &IN::mcE);
  tree->SetBranchAddress("mcEt", &IN::mcEt);
  tree->SetBranchAddress("mcGMomPID", &IN::mcGMomPID);
  tree->SetBranchAddress("mcMomPID", &IN::mcMomPID);
  tree->SetBranchAddress("mcMomPt", &IN::mcMomPt);
  tree->SetBranchAddress("mcMomMass", &IN::mcMomMass);
  tree->SetBranchAddress("mcMomEta", &IN::mcMomEta);
  tree->SetBranchAddress("mcMomPhi", &IN::mcMomPhi);
  tree->SetBranchAddress("mcIndex", &IN::mcIndex);
  tree->SetBranchAddress("mcDecayType", &IN::mcDecayType);
  tree->SetBranchAddress("mcParentage", &IN::mcParentage);
  tree->SetBranchAddress("mcStatus", &IN::mcStatus);
  tree->SetBranchAddress("genMET", &IN::genMET);
  tree->SetBranchAddress("genMETPhi", &IN::genMETPhi);
  tree->SetBranchAddress("nPUInfo", &IN::nPUInfo);
  tree->SetBranchAddress("nPU", &IN::nPU);
  tree->SetBranchAddress("puBX", &IN::puBX);
  tree->SetBranchAddress("puTrue", &IN::puTrue);
  tree->SetBranchAddress("pfMET", &IN::pfMET);
  tree->SetBranchAddress("pfMETPhi", &IN::pfMETPhi);
  tree->SetBranchAddress("pfMETsumEt", &IN::pfMETsumEt);
  tree->SetBranchAddress("pfMETmEtSig", &IN::pfMETmEtSig);
  tree->SetBranchAddress("pfMETSig", &IN::pfMETSig);
  tree->SetBranchAddress("pfType01MET", &IN::pfType01MET);
  tree->SetBranchAddress("pfType01METPhi", &IN::pfType01METPhi);
  tree->SetBranchAddress("pfType01METsumEt", &IN::pfType01METsumEt);
  tree->SetBranchAddress("pfType01METmEtSig", &IN::pfType01METmEtSig);
  tree->SetBranchAddress("pfType01METSig", &IN::pfType01METSig);
  tree->SetBranchAddress("recoPfMET", &IN::recoPfMET);
  tree->SetBranchAddress("recoPfMETPhi", &IN::recoPfMETPhi);
  tree->SetBranchAddress("recoPfMETsumEt", &IN::recoPfMETsumEt);
  tree->SetBranchAddress("recoPfMETmEtSig", &IN::recoPfMETmEtSig);
  tree->SetBranchAddress("recoPfMETSig", &IN::recoPfMETSig);
  tree->SetBranchAddress("trkMETxPV", &IN::trkMETxPV);
  tree->SetBranchAddress("trkMETyPV", &IN::trkMETyPV);
  tree->SetBranchAddress("trkMETPhiPV", &IN::trkMETPhiPV);
  tree->SetBranchAddress("trkMETPV", &IN::trkMETPV);
  tree->SetBranchAddress("trkMETx", &IN::trkMETx);
  tree->SetBranchAddress("trkMETy", &IN::trkMETy);
  tree->SetBranchAddress("trkMETPhi", &IN::trkMETPhi);
  tree->SetBranchAddress("trkMET", &IN::trkMET);
  tree->SetBranchAddress("metFilters", &IN::metFilters);
  tree->SetBranchAddress("nEle", &IN::nEle);
  tree->SetBranchAddress("eleTrg", &IN::eleTrg);
  tree->SetBranchAddress("eleClass", &IN::eleClass);
  tree->SetBranchAddress("eleIsEcalDriven", &IN::eleIsEcalDriven);
  tree->SetBranchAddress("eleCharge", &IN::eleCharge);
  tree->SetBranchAddress("eleChargeConsistent", &IN::eleChargeConsistent);
  tree->SetBranchAddress("eleEn", &IN::eleEn);
  tree->SetBranchAddress("eleEcalEn", &IN::eleEcalEn);
  tree->SetBranchAddress("eleSCRawEn", &IN::eleSCRawEn);
  tree->SetBranchAddress("eleSCEn", &IN::eleSCEn);
  tree->SetBranchAddress("eleESEn", &IN::eleESEn);
  tree->SetBranchAddress("elePt", &IN::elePt);
  tree->SetBranchAddress("eleEta", &IN::eleEta);
  tree->SetBranchAddress("elePhi", &IN::elePhi);
  tree->SetBranchAddress("eleR9", &IN::eleR9);
  tree->SetBranchAddress("eleEtaVtx", &IN::eleEtaVtx);
  tree->SetBranchAddress("elePhiVtx", &IN::elePhiVtx);
  tree->SetBranchAddress("eleEtVtx", &IN::eleEtVtx);
  tree->SetBranchAddress("eleSCEta", &IN::eleSCEta);
  tree->SetBranchAddress("eleSCPhi", &IN::eleSCPhi);
  tree->SetBranchAddress("eleSCEtaWidth", &IN::eleSCEtaWidth);
  tree->SetBranchAddress("eleSCPhiWidth", &IN::eleSCPhiWidth);
  tree->SetBranchAddress("eleVtx_x", &IN::eleVtx_x);
  tree->SetBranchAddress("eleVtx_y", &IN::eleVtx_y);
  tree->SetBranchAddress("eleVtx_z", &IN::eleVtx_z);
  tree->SetBranchAddress("eleD0", &IN::eleD0);
  tree->SetBranchAddress("eleDz", &IN::eleDz);
  tree->SetBranchAddress("eleD0GV", &IN::eleD0GV);
  tree->SetBranchAddress("eleDzGV", &IN::eleDzGV);
  tree->SetBranchAddress("eleD0Vtx", &IN::eleD0Vtx);
  tree->SetBranchAddress("eleDzVtx", &IN::eleDzVtx);
  tree->SetBranchAddress("eleHoverE", &IN::eleHoverE);
  tree->SetBranchAddress("eleHoverE12", &IN::eleHoverE12);
  tree->SetBranchAddress("eleEoverP", &IN::eleEoverP);
  tree->SetBranchAddress("elePin", &IN::elePin);
  tree->SetBranchAddress("elePout", &IN::elePout);
  tree->SetBranchAddress("eleTrkMomErr", &IN::eleTrkMomErr);
  tree->SetBranchAddress("eleBrem", &IN::eleBrem);
  tree->SetBranchAddress("eledEtaAtVtx", &IN::eledEtaAtVtx);
  tree->SetBranchAddress("eledPhiAtVtx", &IN::eledPhiAtVtx);
  tree->SetBranchAddress("eleSigmaIEtaIEta", &IN::eleSigmaIEtaIEta);
  tree->SetBranchAddress("eleSigmaIEtaIPhi", &IN::eleSigmaIEtaIPhi);
  tree->SetBranchAddress("eleSigmaIPhiIPhi", &IN::eleSigmaIPhiIPhi);
  tree->SetBranchAddress("eleEmax", &IN::eleEmax);
  tree->SetBranchAddress("eleE2ndMax", &IN::eleE2ndMax);
  tree->SetBranchAddress("eleETop", &IN::eleETop);
  tree->SetBranchAddress("eleEBottom", &IN::eleEBottom);
  tree->SetBranchAddress("eleELeft", &IN::eleELeft);
  tree->SetBranchAddress("eleERight", &IN::eleERight);
  tree->SetBranchAddress("eleE1x5", &IN::eleE1x5);
  tree->SetBranchAddress("eleE3x3", &IN::eleE3x3);
  tree->SetBranchAddress("eleE5x5", &IN::eleE5x5);
  tree->SetBranchAddress("eleE2x5Max", &IN::eleE2x5Max);
  tree->SetBranchAddress("eleE2x5Top", &IN::eleE2x5Top);
  tree->SetBranchAddress("eleE2x5Bottom", &IN::eleE2x5Bottom);
  tree->SetBranchAddress("eleE2x5Left", &IN::eleE2x5Left);
  tree->SetBranchAddress("eleE2x5Right", &IN::eleE2x5Right);
  tree->SetBranchAddress("eleSeedEta", &IN::eleSeedEta);
  tree->SetBranchAddress("eleSeedE", &IN::eleSeedE);
  tree->SetBranchAddress("eleSeedPhi", &IN::eleSeedPhi);
  tree->SetBranchAddress("eleCrysEta", &IN::eleCrysEta);
  tree->SetBranchAddress("eleCrysPhi", &IN::eleCrysPhi);
  tree->SetBranchAddress("eleCrysIEta", &IN::eleCrysIEta);
  tree->SetBranchAddress("eleCrysIPhi", &IN::eleCrysIPhi);
  tree->SetBranchAddress("eleRegrE", &IN::eleRegrE);
  tree->SetBranchAddress("eleRegrEerr", &IN::eleRegrEerr);
  tree->SetBranchAddress("elePhoRegrE", &IN::elePhoRegrE);
  tree->SetBranchAddress("elePhoRegrEerr", &IN::elePhoRegrEerr);
  tree->SetBranchAddress("eleSeedTime", &IN::eleSeedTime);
  tree->SetBranchAddress("eleRecoFlag", &IN::eleRecoFlag);
  tree->SetBranchAddress("elePos", &IN::elePos);
  tree->SetBranchAddress("eleGenIndex", &IN::eleGenIndex);
  tree->SetBranchAddress("eleGenGMomPID", &IN::eleGenGMomPID);
  tree->SetBranchAddress("eleGenMomPID", &IN::eleGenMomPID);
  tree->SetBranchAddress("eleGenMomPt", &IN::eleGenMomPt);
  tree->SetBranchAddress("eleIsoTrkDR03", &IN::eleIsoTrkDR03);
  tree->SetBranchAddress("eleIsoEcalDR03", &IN::eleIsoEcalDR03);
  tree->SetBranchAddress("eleIsoHcalDR03", &IN::eleIsoHcalDR03);
  tree->SetBranchAddress("eleIsoHcalDR0312", &IN::eleIsoHcalDR0312);
  tree->SetBranchAddress("eleIsoTrkDR04", &IN::eleIsoTrkDR04);
  tree->SetBranchAddress("eleIsoEcalDR04", &IN::eleIsoEcalDR04);
  tree->SetBranchAddress("eleIsoHcalDR04", &IN::eleIsoHcalDR04);
  tree->SetBranchAddress("eleIsoHcalDR0412", &IN::eleIsoHcalDR0412);
  tree->SetBranchAddress("eleModIsoTrk", &IN::eleModIsoTrk);
  tree->SetBranchAddress("eleModIsoEcal", &IN::eleModIsoEcal);
  tree->SetBranchAddress("eleModIsoHcal", &IN::eleModIsoHcal);
  tree->SetBranchAddress("eleMissHits", &IN::eleMissHits);
  tree->SetBranchAddress("eleConvDist", &IN::eleConvDist);
  tree->SetBranchAddress("eleConvDcot", &IN::eleConvDcot);
  tree->SetBranchAddress("eleConvVtxFit", &IN::eleConvVtxFit);
  tree->SetBranchAddress("eleIP3D", &IN::eleIP3D);
  tree->SetBranchAddress("eleIP3DErr", &IN::eleIP3DErr);
  tree->SetBranchAddress("eleIDMVANonTrig", &IN::eleIDMVANonTrig);
  tree->SetBranchAddress("eleIDMVATrig", &IN::eleIDMVATrig);
  tree->SetBranchAddress("elePFChIso03", &IN::elePFChIso03);
  tree->SetBranchAddress("elePFPhoIso03", &IN::elePFPhoIso03);
  tree->SetBranchAddress("elePFNeuIso03", &IN::elePFNeuIso03);
  tree->SetBranchAddress("elePFChIso04", &IN::elePFChIso04);
  tree->SetBranchAddress("elePFPhoIso04", &IN::elePFPhoIso04);
  tree->SetBranchAddress("elePFNeuIso04", &IN::elePFNeuIso04);
  tree->SetBranchAddress("eleESEffSigmaRR_x", &IN::eleESEffSigmaRR_x);
  tree->SetBranchAddress("eleESEffSigmaRR_y", &IN::eleESEffSigmaRR_y);
  tree->SetBranchAddress("eleESEffSigmaRR_z", &IN::eleESEffSigmaRR_z);
  tree->SetBranchAddress("nPho", &IN::nPho);
  tree->SetBranchAddress("phoTrg", &IN::phoTrg);
  tree->SetBranchAddress("phoTrgFilter", &IN::phoTrgFilter);
  tree->SetBranchAddress("phoIsPhoton", &IN::phoIsPhoton);
  tree->SetBranchAddress("phoSCPos_x", &IN::phoSCPos_x);
  tree->SetBranchAddress("phoSCPos_y", &IN::phoSCPos_y);
  tree->SetBranchAddress("phoSCPos_z", &IN::phoSCPos_z);
  tree->SetBranchAddress("phoCaloPos_x", &IN::phoCaloPos_x);
  tree->SetBranchAddress("phoCaloPos_y", &IN::phoCaloPos_y);
  tree->SetBranchAddress("phoCaloPos_z", &IN::phoCaloPos_z);
  tree->SetBranchAddress("phoE", &IN::phoE);
  tree->SetBranchAddress("phoEt", &IN::phoEt);
  tree->SetBranchAddress("phoEta", &IN::phoEta);
  tree->SetBranchAddress("phoVtx_x", &IN::phoVtx_x);
  tree->SetBranchAddress("phoVtx_y", &IN::phoVtx_y);
  tree->SetBranchAddress("phoVtx_z", &IN::phoVtx_z);
  tree->SetBranchAddress("phoPhi", &IN::phoPhi);
  tree->SetBranchAddress("phoEtVtx", &IN::phoEtVtx);
  tree->SetBranchAddress("phoEtaVtx", &IN::phoEtaVtx);
  tree->SetBranchAddress("phoPhiVtx", &IN::phoPhiVtx);
  tree->SetBranchAddress("phoR9", &IN::phoR9);
  tree->SetBranchAddress("phoNClus", &IN::phoNClus);
  tree->SetBranchAddress("phoTrkIsoHollowDR03", &IN::phoTrkIsoHollowDR03);
  tree->SetBranchAddress("phoEcalIsoDR03", &IN::phoEcalIsoDR03);
  tree->SetBranchAddress("phoHcalIsoDR03", &IN::phoHcalIsoDR03);
  tree->SetBranchAddress("phoHcalIsoDR0312", &IN::phoHcalIsoDR0312);
  tree->SetBranchAddress("phoTrkIsoHollowDR04", &IN::phoTrkIsoHollowDR04);
  tree->SetBranchAddress("phoCiCdRtoTrk", &IN::phoCiCdRtoTrk);
  tree->SetBranchAddress("phoEcalIsoDR04", &IN::phoEcalIsoDR04);
  tree->SetBranchAddress("phoHcalIsoDR04", &IN::phoHcalIsoDR04);
  tree->SetBranchAddress("phoHcalIsoDR0412", &IN::phoHcalIsoDR0412);
  tree->SetBranchAddress("phoHoverE", &IN::phoHoverE);
  tree->SetBranchAddress("phoHoverE12", &IN::phoHoverE12);
  tree->SetBranchAddress("phoEleVeto", &IN::phoEleVeto);
  tree->SetBranchAddress("phoSigmaIEtaIEta", &IN::phoSigmaIEtaIEta);
  tree->SetBranchAddress("phoSigmaIEtaIPhi", &IN::phoSigmaIEtaIPhi);
  tree->SetBranchAddress("phoSigmaIPhiIPhi", &IN::phoSigmaIPhiIPhi);
  tree->SetBranchAddress("phoCiCPF4phopfIso03", &IN::phoCiCPF4phopfIso03);
  tree->SetBranchAddress("phoCiCPF4phopfIso04", &IN::phoCiCPF4phopfIso04);
  tree->SetBranchAddress("phoCiCPF4chgpfIso02", &IN::phoCiCPF4chgpfIso02);
  tree->SetBranchAddress("phoCiCPF4chgpfIso03", &IN::phoCiCPF4chgpfIso03);
  tree->SetBranchAddress("phoCiCPF4chgpfIso04", &IN::phoCiCPF4chgpfIso04);
  tree->SetBranchAddress("phoEmax", &IN::phoEmax);
  tree->SetBranchAddress("phoETop", &IN::phoETop);
  tree->SetBranchAddress("phoEBottom", &IN::phoEBottom);
  tree->SetBranchAddress("phoELeft", &IN::phoELeft);
  tree->SetBranchAddress("phoERight", &IN::phoERight);
  tree->SetBranchAddress("phoE2ndMax", &IN::phoE2ndMax);
  tree->SetBranchAddress("phoE3x3", &IN::phoE3x3);
  tree->SetBranchAddress("phoE3x1", &IN::phoE3x1);
  tree->SetBranchAddress("phoE1x3", &IN::phoE1x3);
  tree->SetBranchAddress("phoE5x5", &IN::phoE5x5);
  tree->SetBranchAddress("phoE1x5", &IN::phoE1x5);
  tree->SetBranchAddress("phoE2x2", &IN::phoE2x2);
  tree->SetBranchAddress("phoE2x5Max", &IN::phoE2x5Max);
  tree->SetBranchAddress("phoE2x5Top", &IN::phoE2x5Top);
  tree->SetBranchAddress("phoE2x5Bottom", &IN::phoE2x5Bottom);
  tree->SetBranchAddress("phoE2x5Left", &IN::phoE2x5Left);
  tree->SetBranchAddress("phoE2x5Right", &IN::phoE2x5Right);
  tree->SetBranchAddress("phoSeedE", &IN::phoSeedE);
  tree->SetBranchAddress("phoSeedEta", &IN::phoSeedEta);
  tree->SetBranchAddress("phoSeedPhi", &IN::phoSeedPhi);
  tree->SetBranchAddress("phoCrysEta", &IN::phoCrysEta);
  tree->SetBranchAddress("phoCrysPhi", &IN::phoCrysPhi);
  tree->SetBranchAddress("phoCrysIEta", &IN::phoCrysIEta);
  tree->SetBranchAddress("phoCrysIPhi", &IN::phoCrysIPhi);
  tree->SetBranchAddress("phoPFChIso", &IN::phoPFChIso);
  tree->SetBranchAddress("phoPFPhoIso", &IN::phoPFPhoIso);
  tree->SetBranchAddress("phoPFNeuIso", &IN::phoPFNeuIso);
  tree->SetBranchAddress("phoSCRChIso", &IN::phoSCRChIso);
  tree->SetBranchAddress("phoSCRPhoIso", &IN::phoSCRPhoIso);
  tree->SetBranchAddress("phoSCRNeuIso", &IN::phoSCRNeuIso);
  tree->SetBranchAddress("phoSCRChIso04", &IN::phoSCRChIso04);
  tree->SetBranchAddress("phoSCRPhoIso04", &IN::phoSCRPhoIso04);
  tree->SetBranchAddress("phoSCRNeuIso04", &IN::phoSCRNeuIso04);
  tree->SetBranchAddress("phoRandConeChIso", &IN::phoRandConeChIso);
  tree->SetBranchAddress("phoRandConePhoIso", &IN::phoRandConePhoIso);
  tree->SetBranchAddress("phoRandConeNeuIso", &IN::phoRandConeNeuIso);
  tree->SetBranchAddress("phoRandConeChIso04", &IN::phoRandConeChIso04);
  tree->SetBranchAddress("phoRandConePhoIso04", &IN::phoRandConePhoIso04);
  tree->SetBranchAddress("phoRandConeNeuIso04", &IN::phoRandConeNeuIso04);
  tree->SetBranchAddress("phoRegrE", &IN::phoRegrE);
  tree->SetBranchAddress("phoRegrEerr", &IN::phoRegrEerr);
  tree->SetBranchAddress("phoSeedTime", &IN::phoSeedTime);
  tree->SetBranchAddress("phoSeedDetId1", &IN::phoSeedDetId1);
  tree->SetBranchAddress("phoSeedDetId2", &IN::phoSeedDetId2);
  tree->SetBranchAddress("phoLICTD", &IN::phoLICTD);
  tree->SetBranchAddress("phoRecoFlag", &IN::phoRecoFlag);
  tree->SetBranchAddress("phoPos", &IN::phoPos);
  tree->SetBranchAddress("phoGenIndex", &IN::phoGenIndex);
  tree->SetBranchAddress("phoGenGMomPID", &IN::phoGenGMomPID);
  tree->SetBranchAddress("phoGenMomPID", &IN::phoGenMomPID);
  tree->SetBranchAddress("phoGenMomPt", &IN::phoGenMomPt);
  tree->SetBranchAddress("phoSCE", &IN::phoSCE);
  tree->SetBranchAddress("phoSCRawE", &IN::phoSCRawE);
  tree->SetBranchAddress("phoESEn", &IN::phoESEn);
  tree->SetBranchAddress("phoSCEt", &IN::phoSCEt);
  tree->SetBranchAddress("phoSCEta", &IN::phoSCEta);
  tree->SetBranchAddress("phoSCPhi", &IN::phoSCPhi);
  tree->SetBranchAddress("phoSCEtaWidth", &IN::phoSCEtaWidth);
  tree->SetBranchAddress("phoSCPhiWidth", &IN::phoSCPhiWidth);
  tree->SetBranchAddress("phoSCBrem", &IN::phoSCBrem);
  tree->SetBranchAddress("phoOverlap", &IN::phoOverlap);
  tree->SetBranchAddress("phohasPixelSeed", &IN::phohasPixelSeed);
  tree->SetBranchAddress("pho_hasConvPf", &IN::pho_hasConvPf);
  tree->SetBranchAddress("pho_hasSLConvPf", &IN::pho_hasSLConvPf);
  tree->SetBranchAddress("pho_pfconvVtxZ", &IN::pho_pfconvVtxZ);
  tree->SetBranchAddress("pho_pfconvVtxZErr", &IN::pho_pfconvVtxZErr);
  tree->SetBranchAddress("pho_nSLConv", &IN::pho_nSLConv);
  tree->SetBranchAddress("pho_pfSLConvPos_x", &IN::pho_pfSLConvPos_x);
  tree->SetBranchAddress("pho_pfSLConvPos_y", &IN::pho_pfSLConvPos_y);
  tree->SetBranchAddress("pho_pfSLConvPos_z", &IN::pho_pfSLConvPos_z);
  tree->SetBranchAddress("pho_pfSLConvVtxZ", &IN::pho_pfSLConvVtxZ);
  tree->SetBranchAddress("phoIsConv", &IN::phoIsConv);
  tree->SetBranchAddress("phoNConv", &IN::phoNConv);
  tree->SetBranchAddress("phoConvInvMass", &IN::phoConvInvMass);
  tree->SetBranchAddress("phoConvCotTheta", &IN::phoConvCotTheta);
  tree->SetBranchAddress("phoConvEoverP", &IN::phoConvEoverP);
  tree->SetBranchAddress("phoConvZofPVfromTrks", &IN::phoConvZofPVfromTrks);
  tree->SetBranchAddress("phoConvMinDist", &IN::phoConvMinDist);
  tree->SetBranchAddress("phoConvdPhiAtVtx", &IN::phoConvdPhiAtVtx);
  tree->SetBranchAddress("phoConvdPhiAtCalo", &IN::phoConvdPhiAtCalo);
  tree->SetBranchAddress("phoConvdEtaAtCalo", &IN::phoConvdEtaAtCalo);
  tree->SetBranchAddress("phoConvTrkd0_x", &IN::phoConvTrkd0_x);
  tree->SetBranchAddress("phoConvTrkd0_y", &IN::phoConvTrkd0_y);
  tree->SetBranchAddress("phoConvTrkPin_x", &IN::phoConvTrkPin_x);
  tree->SetBranchAddress("phoConvTrkPin_y", &IN::phoConvTrkPin_y);
  tree->SetBranchAddress("phoConvTrkPout_x", &IN::phoConvTrkPout_x);
  tree->SetBranchAddress("phoConvTrkPout_y", &IN::phoConvTrkPout_y);
  tree->SetBranchAddress("phoConvTrkdz_x", &IN::phoConvTrkdz_x);
  tree->SetBranchAddress("phoConvTrkdz_y", &IN::phoConvTrkdz_y);
  tree->SetBranchAddress("phoConvTrkdzErr_x", &IN::phoConvTrkdzErr_x);
  tree->SetBranchAddress("phoConvTrkdzErr_y", &IN::phoConvTrkdzErr_y);
  tree->SetBranchAddress("phoConvChi2", &IN::phoConvChi2);
  tree->SetBranchAddress("phoConvChi2Prob", &IN::phoConvChi2Prob);
  tree->SetBranchAddress("phoConvNTrks", &IN::phoConvNTrks);
  tree->SetBranchAddress("phoConvCharge1", &IN::phoConvCharge1);
  tree->SetBranchAddress("phoConvCharge2", &IN::phoConvCharge2);
  tree->SetBranchAddress("phoConvValidVtx", &IN::phoConvValidVtx);
  tree->SetBranchAddress("phoConvLikeLihood", &IN::phoConvLikeLihood);
  tree->SetBranchAddress("phoConvP4_0", &IN::phoConvP4_0);
  tree->SetBranchAddress("phoConvP4_1", &IN::phoConvP4_1);
  tree->SetBranchAddress("phoConvP4_2", &IN::phoConvP4_2);
  tree->SetBranchAddress("phoConvP4_3", &IN::phoConvP4_3);
  tree->SetBranchAddress("phoConvVtx_x", &IN::phoConvVtx_x);
  tree->SetBranchAddress("phoConvVtx_y", &IN::phoConvVtx_y);
  tree->SetBranchAddress("phoConvVtx_z", &IN::phoConvVtx_z);
  tree->SetBranchAddress("phoConvVtxErr_x", &IN::phoConvVtxErr_x);
  tree->SetBranchAddress("phoConvVtxErr_y", &IN::phoConvVtxErr_y);
  tree->SetBranchAddress("phoConvVtxErr_z", &IN::phoConvVtxErr_z);
  tree->SetBranchAddress("phoConvPairMomentum_x", &IN::phoConvPairMomentum_x);
  tree->SetBranchAddress("phoConvPairMomentum_y", &IN::phoConvPairMomentum_y);
  tree->SetBranchAddress("phoConvPairMomentum_z", &IN::phoConvPairMomentum_z);
  tree->SetBranchAddress("phoConvRefittedMomentum_x", &IN::phoConvRefittedMomentum_x);
  tree->SetBranchAddress("phoConvRefittedMomentum_y", &IN::phoConvRefittedMomentum_y);
  tree->SetBranchAddress("phoConvRefittedMomentum_z", &IN::phoConvRefittedMomentum_z);
  tree->SetBranchAddress("SingleLegConv", &IN::SingleLegConv);
  tree->SetBranchAddress("phoPFConvVtx_x", &IN::phoPFConvVtx_x);
  tree->SetBranchAddress("phoPFConvVtx_y", &IN::phoPFConvVtx_y);
  tree->SetBranchAddress("phoPFConvVtx_z", &IN::phoPFConvVtx_z);
  tree->SetBranchAddress("phoPFConvMom_x", &IN::phoPFConvMom_x);
  tree->SetBranchAddress("phoPFConvMom_y", &IN::phoPFConvMom_y);
  tree->SetBranchAddress("phoPFConvMom_z", &IN::phoPFConvMom_z);
  tree->SetBranchAddress("phoESEffSigmaRR_x", &IN::phoESEffSigmaRR_x);
  tree->SetBranchAddress("phoESEffSigmaRR_y", &IN::phoESEffSigmaRR_y);
  tree->SetBranchAddress("phoESEffSigmaRR_z", &IN::phoESEffSigmaRR_z);
  tree->SetBranchAddress("nMu", &IN::nMu);
  tree->SetBranchAddress("muTrg", &IN::muTrg);
  tree->SetBranchAddress("muEta", &IN::muEta);
  tree->SetBranchAddress("muPhi", &IN::muPhi);
  tree->SetBranchAddress("muCharge", &IN::muCharge);
  tree->SetBranchAddress("muPt", &IN::muPt);
  tree->SetBranchAddress("muPz", &IN::muPz);
  tree->SetBranchAddress("muVtx_x", &IN::muVtx_x);
  tree->SetBranchAddress("muVtx_y", &IN::muVtx_y);
  tree->SetBranchAddress("muVtx_z", &IN::muVtx_z);
  tree->SetBranchAddress("muVtxGlb_x", &IN::muVtxGlb_x);
  tree->SetBranchAddress("muVtxGlb_y", &IN::muVtxGlb_y);
  tree->SetBranchAddress("muVtxGlb_z", &IN::muVtxGlb_z);
  tree->SetBranchAddress("muGenIndex", &IN::muGenIndex);
  tree->SetBranchAddress("mucktPt", &IN::mucktPt);
  tree->SetBranchAddress("mucktPtErr", &IN::mucktPtErr);
  tree->SetBranchAddress("mucktEta", &IN::mucktEta);
  tree->SetBranchAddress("mucktPhi", &IN::mucktPhi);
  tree->SetBranchAddress("mucktdxy", &IN::mucktdxy);
  tree->SetBranchAddress("mucktdz", &IN::mucktdz);
  tree->SetBranchAddress("muIsoTrk", &IN::muIsoTrk);
  tree->SetBranchAddress("muIsoCalo", &IN::muIsoCalo);
  tree->SetBranchAddress("muIsoEcal", &IN::muIsoEcal);
  tree->SetBranchAddress("muIsoHcal", &IN::muIsoHcal);
  tree->SetBranchAddress("muChi2NDF", &IN::muChi2NDF);
  tree->SetBranchAddress("muInnerChi2NDF", &IN::muInnerChi2NDF);
  tree->SetBranchAddress("muPFIsoR04_CH", &IN::muPFIsoR04_CH);
  tree->SetBranchAddress("muPFIsoR04_NH", &IN::muPFIsoR04_NH);
  tree->SetBranchAddress("muPFIsoR04_Pho", &IN::muPFIsoR04_Pho);
  tree->SetBranchAddress("muPFIsoR04_PU", &IN::muPFIsoR04_PU);
  tree->SetBranchAddress("muPFIsoR04_CPart", &IN::muPFIsoR04_CPart);
  tree->SetBranchAddress("muPFIsoR04_NHHT", &IN::muPFIsoR04_NHHT);
  tree->SetBranchAddress("muPFIsoR04_PhoHT", &IN::muPFIsoR04_PhoHT);
  tree->SetBranchAddress("muPFIsoR03_CH", &IN::muPFIsoR03_CH);
  tree->SetBranchAddress("muPFIsoR03_NH", &IN::muPFIsoR03_NH);
  tree->SetBranchAddress("muPFIsoR03_Pho", &IN::muPFIsoR03_Pho);
  tree->SetBranchAddress("muPFIsoR03_PU", &IN::muPFIsoR03_PU);
  tree->SetBranchAddress("muPFIsoR03_CPart", &IN::muPFIsoR03_CPart);
  tree->SetBranchAddress("muPFIsoR03_NHHT", &IN::muPFIsoR03_NHHT);
  tree->SetBranchAddress("muPFIsoR03_PhoHT", &IN::muPFIsoR03_PhoHT);
  tree->SetBranchAddress("muType", &IN::muType);
  tree->SetBranchAddress("muD0", &IN::muD0);
  tree->SetBranchAddress("muDz", &IN::muDz);
  tree->SetBranchAddress("muD0GV", &IN::muD0GV);
  tree->SetBranchAddress("muDzGV", &IN::muDzGV);
  tree->SetBranchAddress("muD0Vtx", &IN::muD0Vtx);
  tree->SetBranchAddress("muDzVtx", &IN::muDzVtx);
  tree->SetBranchAddress("muInnerD0", &IN::muInnerD0);
  tree->SetBranchAddress("muInnerDz", &IN::muInnerDz);
  tree->SetBranchAddress("muInnerD0GV", &IN::muInnerD0GV);
  tree->SetBranchAddress("muInnerDzGV", &IN::muInnerDzGV);
  tree->SetBranchAddress("muInnerPt", &IN::muInnerPt);
  tree->SetBranchAddress("muInnerPtErr", &IN::muInnerPtErr);
  tree->SetBranchAddress("muNumberOfValidTrkLayers", &IN::muNumberOfValidTrkLayers);
  tree->SetBranchAddress("muNumberOfValidTrkHits", &IN::muNumberOfValidTrkHits);
  tree->SetBranchAddress("muNumberOfValidPixelLayers", &IN::muNumberOfValidPixelLayers);
  tree->SetBranchAddress("muNumberOfValidPixelHits", &IN::muNumberOfValidPixelHits);
  tree->SetBranchAddress("muNumberOfValidMuonHits", &IN::muNumberOfValidMuonHits);
  tree->SetBranchAddress("muStations", &IN::muStations);
  tree->SetBranchAddress("muChambers", &IN::muChambers);
  tree->SetBranchAddress("muIP3D", &IN::muIP3D);
  tree->SetBranchAddress("muIP3DErr", &IN::muIP3DErr);
  tree->SetBranchAddress("nTau", &IN::nTau);
  tree->SetBranchAddress("tauDecayModeFinding", &IN::tauDecayModeFinding);
  tree->SetBranchAddress("tauAgainstElectronLooseMVA3", &IN::tauAgainstElectronLooseMVA3);
  tree->SetBranchAddress("tauAgainstElectronMediumMVA3", &IN::tauAgainstElectronMediumMVA3);
  tree->SetBranchAddress("tauAgainstElectronTightMVA3", &IN::tauAgainstElectronTightMVA3);
  tree->SetBranchAddress("tauAgainstElectronVTightMVA3", &IN::tauAgainstElectronVTightMVA3);
  tree->SetBranchAddress("tauAgainstElectronDeadECAL", &IN::tauAgainstElectronDeadECAL);
  tree->SetBranchAddress("tauAgainstMuonLoose2", &IN::tauAgainstMuonLoose2);
  tree->SetBranchAddress("tauAgainstMuonMedium2", &IN::tauAgainstMuonMedium2);
  tree->SetBranchAddress("tauAgainstMuonTight2", &IN::tauAgainstMuonTight2);
  tree->SetBranchAddress("tauCombinedIsolationDeltaBetaCorrRaw3Hits", &IN::tauCombinedIsolationDeltaBetaCorrRaw3Hits);
  tree->SetBranchAddress("tauLooseCombinedIsolationDeltaBetaCorr3Hits", &IN::tauLooseCombinedIsolationDeltaBetaCorr3Hits);
  tree->SetBranchAddress("tauMediumCombinedIsolationDeltaBetaCorr3Hits", &IN::tauMediumCombinedIsolationDeltaBetaCorr3Hits);
  tree->SetBranchAddress("tauTightCombinedIsolationDeltaBetaCorr3Hits", &IN::tauTightCombinedIsolationDeltaBetaCorr3Hits);
  tree->SetBranchAddress("tauEta", &IN::tauEta);
  tree->SetBranchAddress("tauPhi", &IN::tauPhi);
  tree->SetBranchAddress("tauPt", &IN::tauPt);
  tree->SetBranchAddress("tauEt", &IN::tauEt);
  tree->SetBranchAddress("tauCharge", &IN::tauCharge);
  tree->SetBranchAddress("tauDecayMode", &IN::tauDecayMode);
  tree->SetBranchAddress("tauEMFraction", &IN::tauEMFraction);
  tree->SetBranchAddress("tauHCAL3x3OverPLead", &IN::tauHCAL3x3OverPLead);
  tree->SetBranchAddress("tauHCALMaxOverPLead", &IN::tauHCALMaxOverPLead);
  tree->SetBranchAddress("tauHCALTotOverPLead", &IN::tauHCALTotOverPLead);
  tree->SetBranchAddress("tauIsolationPFChargedHadrCandsPtSum", &IN::tauIsolationPFChargedHadrCandsPtSum);
  tree->SetBranchAddress("tauIsolationPFGammaCandsEtSum", &IN::tauIsolationPFGammaCandsEtSum);
  tree->SetBranchAddress("tauLeadPFChargedHadrCandsignedSipt", &IN::tauLeadPFChargedHadrCandsignedSipt);
  tree->SetBranchAddress("tauLeadChargedHadronExists", &IN::tauLeadChargedHadronExists);
  tree->SetBranchAddress("tauLeadChargedHadronEta", &IN::tauLeadChargedHadronEta);
  tree->SetBranchAddress("tauLeadChargedHadronPhi", &IN::tauLeadChargedHadronPhi);
  tree->SetBranchAddress("tauLeadChargedHadronPt", &IN::tauLeadChargedHadronPt);
  tree->SetBranchAddress("rho25", &IN::rho25);
  tree->SetBranchAddress("rho25_neu", &IN::rho25_neu);
  tree->SetBranchAddress("rho25_muPFiso", &IN::rho25_muPFiso);
  tree->SetBranchAddress("rho25_elePFiso", &IN::rho25_elePFiso);
  tree->SetBranchAddress("rho2011", &IN::rho2011);
  tree->SetBranchAddress("rho2012", &IN::rho2012);
  tree->SetBranchAddress("QGTag_MLP", &IN::QGTag_MLP);
  tree->SetBranchAddress("QGTag_likelihood", &IN::QGTag_likelihood);
  tree->SetBranchAddress("nCA8Jet", &IN::nCA8Jet);
  tree->SetBranchAddress("CA8JetPt", &IN::CA8JetPt);
  tree->SetBranchAddress("CA8JetEta", &IN::CA8JetEta);
  tree->SetBranchAddress("CA8JetPhi", &IN::CA8JetPhi);
  tree->SetBranchAddress("CA8JetMass", &IN::CA8JetMass);
  tree->SetBranchAddress("CA8JetArea", &IN::CA8JetArea);
  tree->SetBranchAddress("CA8Jet_tau1", &IN::CA8Jet_tau1);
  tree->SetBranchAddress("CA8Jet_tau2", &IN::CA8Jet_tau2);
  tree->SetBranchAddress("CA8Jet_tau3", &IN::CA8Jet_tau3);
  tree->SetBranchAddress("CA8JetCHF", &IN::CA8JetCHF);
  tree->SetBranchAddress("CA8JetNHF", &IN::CA8JetNHF);
  tree->SetBranchAddress("CA8JetCEF", &IN::CA8JetCEF);
  tree->SetBranchAddress("CA8JetNEF", &IN::CA8JetNEF);
  tree->SetBranchAddress("CA8JetNCH", &IN::CA8JetNCH);
  tree->SetBranchAddress("CA8Jetnconstituents", &IN::CA8Jetnconstituents);
  tree->SetBranchAddress("CA8prunedJetMass", &IN::CA8prunedJetMass);
  tree->SetBranchAddress("CA8prunedJet_nSubJets", &IN::CA8prunedJet_nSubJets);
  tree->SetBranchAddress("CA8prunedJet_SubjetPt", &IN::CA8prunedJet_SubjetPt);
  tree->SetBranchAddress("CA8prunedJet_SubjetEta", &IN::CA8prunedJet_SubjetEta);
  tree->SetBranchAddress("CA8prunedJet_SubjetPhi", &IN::CA8prunedJet_SubjetPhi);
  tree->SetBranchAddress("CA8prunedJet_SubjetMass", &IN::CA8prunedJet_SubjetMass);
  tree->SetBranchAddress("nJet", &IN::nJet);
  tree->SetBranchAddress("jetTrg", &IN::jetTrg);
  tree->SetBranchAddress("jetEn", &IN::jetEn);
  tree->SetBranchAddress("jetPt", &IN::jetPt);
  tree->SetBranchAddress("jetEta", &IN::jetEta);
  tree->SetBranchAddress("jetPhi", &IN::jetPhi);
  tree->SetBranchAddress("jetCharge", &IN::jetCharge);
  tree->SetBranchAddress("jetEt", &IN::jetEt);
  tree->SetBranchAddress("jetRawPt", &IN::jetRawPt);
  tree->SetBranchAddress("jetRawEn", &IN::jetRawEn);
  tree->SetBranchAddress("jetArea", &IN::jetArea);
  tree->SetBranchAddress("jetCHF", &IN::jetCHF);
  tree->SetBranchAddress("jetNHF", &IN::jetNHF);
  tree->SetBranchAddress("jetCEF", &IN::jetCEF);
  tree->SetBranchAddress("jetNEF", &IN::jetNEF);
  tree->SetBranchAddress("jetNCH", &IN::jetNCH);
  tree->SetBranchAddress("jetHFHAE", &IN::jetHFHAE);
  tree->SetBranchAddress("jetHFEME", &IN::jetHFEME);
  tree->SetBranchAddress("jetNConstituents", &IN::jetNConstituents);
  tree->SetBranchAddress("jetCombinedSecondaryVtxBJetTags", &IN::jetCombinedSecondaryVtxBJetTags);
  tree->SetBranchAddress("jetCombinedSecondaryVtxMVABJetTags", &IN::jetCombinedSecondaryVtxMVABJetTags);
  tree->SetBranchAddress("jetJetProbabilityBJetTags", &IN::jetJetProbabilityBJetTags);
  tree->SetBranchAddress("jetJetBProbabilityBJetTags", &IN::jetJetBProbabilityBJetTags);
  tree->SetBranchAddress("jetBetaStar", &IN::jetBetaStar);
  tree->SetBranchAddress("jetPFLooseId", &IN::jetPFLooseId);
  tree->SetBranchAddress("jetDRMean", &IN::jetDRMean);
  tree->SetBranchAddress("jetDR2Mean", &IN::jetDR2Mean);
  tree->SetBranchAddress("jetDZ", &IN::jetDZ);
  tree->SetBranchAddress("jetFrac01", &IN::jetFrac01);
  tree->SetBranchAddress("jetFrac02", &IN::jetFrac02);
  tree->SetBranchAddress("jetFrac03", &IN::jetFrac03);
  tree->SetBranchAddress("jetFrac04", &IN::jetFrac04);
  tree->SetBranchAddress("jetFrac05", &IN::jetFrac05);
  tree->SetBranchAddress("jetFrac06", &IN::jetFrac06);
  tree->SetBranchAddress("jetFrac07", &IN::jetFrac07);
  tree->SetBranchAddress("jetBeta", &IN::jetBeta);
  tree->SetBranchAddress("jetBetaStarCMG", &IN::jetBetaStarCMG);
  tree->SetBranchAddress("jetBetaStarClassic", &IN::jetBetaStarClassic);
  tree->SetBranchAddress("jetBetaExt", &IN::jetBetaExt);
  tree->SetBranchAddress("jetBetaStarCMGExt", &IN::jetBetaStarCMGExt);
  tree->SetBranchAddress("jetBetaStarClassicExt", &IN::jetBetaStarClassicExt);
  tree->SetBranchAddress("jetNNeutrals", &IN::jetNNeutrals);
  tree->SetBranchAddress("jetNCharged", &IN::jetNCharged);
  tree->SetBranchAddress("jetMVAs", &IN::jetMVAs);
  tree->SetBranchAddress("jetWPLevels", &IN::jetWPLevels);
  tree->SetBranchAddress("jetMVAsExt_simple", &IN::jetMVAsExt_simple);
  tree->SetBranchAddress("jetWPLevelsExt_simple", &IN::jetWPLevelsExt_simple);
  tree->SetBranchAddress("jetMVAsExt_full", &IN::jetMVAsExt_full);
  tree->SetBranchAddress("jetWPLevelsExt_full", &IN::jetWPLevelsExt_full);
  tree->SetBranchAddress("jetMVAsExt_cutBased", &IN::jetMVAsExt_cutBased);
  tree->SetBranchAddress("jetWPLevelsExt_cutBased", &IN::jetWPLevelsExt_cutBased);
  tree->SetBranchAddress("jetMVAsExt_philv1", &IN::jetMVAsExt_philv1);
  tree->SetBranchAddress("jetWPLevelsExt_philv1", &IN::jetWPLevelsExt_philv1);
  tree->SetBranchAddress("jetMt", &IN::jetMt);
  tree->SetBranchAddress("jetJECUnc", &IN::jetJECUnc);
  tree->SetBranchAddress("jetLeadTrackPt", &IN::jetLeadTrackPt);
  tree->SetBranchAddress("jetVtxPt", &IN::jetVtxPt);
  tree->SetBranchAddress("jetVtxMass", &IN::jetVtxMass);
  tree->SetBranchAddress("jetVtx3dL", &IN::jetVtx3dL);
  tree->SetBranchAddress("jetVtx3deL", &IN::jetVtx3deL);
  tree->SetBranchAddress("jetSoftLeptPt", &IN::jetSoftLeptPt);
  tree->SetBranchAddress("jetSoftLeptPtRel", &IN::jetSoftLeptPtRel);
  tree->SetBranchAddress("jetSoftLeptdR", &IN::jetSoftLeptdR);
  tree->SetBranchAddress("jetSoftLeptIdlooseMu", &IN::jetSoftLeptIdlooseMu);
  tree->SetBranchAddress("jetSoftLeptIdEle95", &IN::jetSoftLeptIdEle95);
  tree->SetBranchAddress("jetDPhiMETJet", &IN::jetDPhiMETJet);
  tree->SetBranchAddress("jetPuJetIdL", &IN::jetPuJetIdL);
  tree->SetBranchAddress("jetPuJetIdM", &IN::jetPuJetIdM);
  tree->SetBranchAddress("jetPuJetIdT", &IN::jetPuJetIdT);
  tree->SetBranchAddress("jetPartonID", &IN::jetPartonID);
  tree->SetBranchAddress("jetGenJetIndex", &IN::jetGenJetIndex);
  tree->SetBranchAddress("jetGenJetEn", &IN::jetGenJetEn);
  tree->SetBranchAddress("jetGenJetPt", &IN::jetGenJetPt);
  tree->SetBranchAddress("jetGenJetEta", &IN::jetGenJetEta);
  tree->SetBranchAddress("jetGenJetPhi", &IN::jetGenJetPhi);
  tree->SetBranchAddress("jetGenPartonID", &IN::jetGenPartonID);
  tree->SetBranchAddress("jetGenEn", &IN::jetGenEn);
  tree->SetBranchAddress("jetGenPt", &IN::jetGenPt);
  tree->SetBranchAddress("jetGenEta", &IN::jetGenEta);
  tree->SetBranchAddress("jetGenPhi", &IN::jetGenPhi);
  tree->SetBranchAddress("jetGenPartonMomID", &IN::jetGenPartonMomID);
  tree->SetBranchAddress("nConv", &IN::nConv);
  tree->SetBranchAddress("convP4_x", &IN::convP4_x);
  tree->SetBranchAddress("convP4_y", &IN::convP4_y);
  tree->SetBranchAddress("convP4_z", &IN::convP4_z);
  tree->SetBranchAddress("convP4_E", &IN::convP4_E);
  tree->SetBranchAddress("convVtx_x", &IN::convVtx_x);
  tree->SetBranchAddress("convVtx_y", &IN::convVtx_y);
  tree->SetBranchAddress("convVtx_z", &IN::convVtx_z);
  tree->SetBranchAddress("convVtxErr_x", &IN::convVtxErr_x);
  tree->SetBranchAddress("convVtxErr_y", &IN::convVtxErr_y);
  tree->SetBranchAddress("convVtxErr_z", &IN::convVtxErr_z);
  tree->SetBranchAddress("convPairMomentum_x", &IN::convPairMomentum_x);
  tree->SetBranchAddress("convPairMomentum_y", &IN::convPairMomentum_y);
  tree->SetBranchAddress("convPairMomentum_z", &IN::convPairMomentum_z);
  tree->SetBranchAddress("convRefittedMomentum_x", &IN::convRefittedMomentum_x);
  tree->SetBranchAddress("convRefittedMomentum_y", &IN::convRefittedMomentum_y);
  tree->SetBranchAddress("convRefittedMomentum_z", &IN::convRefittedMomentum_z);
  tree->SetBranchAddress("convNTracks", &IN::convNTracks);
  tree->SetBranchAddress("convPairInvMass", &IN::convPairInvMass);
  tree->SetBranchAddress("convPairCotThetaSep", &IN::convPairCotThetaSep);
  tree->SetBranchAddress("convEoverP", &IN::convEoverP);
  tree->SetBranchAddress("convDistOfMinApproach", &IN::convDistOfMinApproach);
  tree->SetBranchAddress("convDPhiTrksAtVtx", &IN::convDPhiTrksAtVtx);
  tree->SetBranchAddress("convDPhiTrksAtEcal", &IN::convDPhiTrksAtEcal);
  tree->SetBranchAddress("convDEtaTrksAtEcal", &IN::convDEtaTrksAtEcal);
  tree->SetBranchAddress("convDxy", &IN::convDxy);
  tree->SetBranchAddress("convDz", &IN::convDz);
  tree->SetBranchAddress("convLxy", &IN::convLxy);
  tree->SetBranchAddress("convLz", &IN::convLz);
  tree->SetBranchAddress("convZofPrimVtxFromTrks", &IN::convZofPrimVtxFromTrks);
  tree->SetBranchAddress("convNHitsBeforeVtx_0", &IN::convNHitsBeforeVtx_0);
  tree->SetBranchAddress("convNHitsBeforeVtx_1", &IN::convNHitsBeforeVtx_1);
  tree->SetBranchAddress("convNSharedHits", &IN::convNSharedHits);
  tree->SetBranchAddress("convValidVtx", &IN::convValidVtx);
  tree->SetBranchAddress("convMVALikelihood", &IN::convMVALikelihood);
  tree->SetBranchAddress("convChi2", &IN::convChi2);
  tree->SetBranchAddress("convChi2Probability", &IN::convChi2Probability);
  tree->SetBranchAddress("convTk1Dz", &IN::convTk1Dz);
  tree->SetBranchAddress("convTk2Dz", &IN::convTk2Dz);
  tree->SetBranchAddress("convTk1DzErr", &IN::convTk1DzErr);
  tree->SetBranchAddress("convTk2DzErr", &IN::convTk2DzErr);
  tree->SetBranchAddress("convCh1Ch2", &IN::convCh1Ch2);
  tree->SetBranchAddress("convTk1D0", &IN::convTk1D0);
  tree->SetBranchAddress("convTk1Pout", &IN::convTk1Pout);
  tree->SetBranchAddress("convTk1Pin", &IN::convTk1Pin);
  tree->SetBranchAddress("convTk2D0", &IN::convTk2D0);
  tree->SetBranchAddress("convTk2Pout", &IN::convTk2Pout);
  tree->SetBranchAddress("convTk2Pin", &IN::convTk2Pin);
};

void InitOUTTree( TTree * tree ) {
}
void CopyInputVarsToOutput( std::string prefix) {
}

// The next set of functions allows one to copy 
// input variables to the outputs based on a key
// A copy function is generated for each pair of variables
// The copy function holds the name of the function to compare
// to the input key.  If the variables are vectors, a second function
// is generated that allows one to copy all variables matching a given key
// at a certain index and pushes that back on the output variable

void CopyPrefixBranchesInToOut( const std::string & prefix ) {
// Just call each copy function with the prefix 

}; 

void CopyPrefixIndexBranchesInToOut( const std::string & prefix, unsigned index ) { 

// Just call each copy function with the prefix 

}; 

void ClearOutputPrefix ( const std::string & prefix ) {
}; 

